<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.peng</groupId>
    <artifactId>spark</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!-- 表明当前项目是一个父项目，没有具体代码，只有声明的共有信息 -->
    <packaging>pom</packaging>

    <!-- 声明公有的属性 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <spark.version>2.3.3</spark.version>
        <scala.version>2.11.8</scala.version>
        <log4j.version>1.2.17</log4j.version>
    </properties>

    <modules>
        <module>base</module>
        <module>spark-core</module>
        <module>spark-sql</module>
        <module>tuning</module>
    </modules>

    <!-- 声明并引入公有的依赖 -->
    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.38</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${spark.version}</version>
            <!-- 编译环境能用，运行环境不可用 -->
            <!-- 具体描述:-->
            <!-- 在本地运行的时候,需要编译org.apache.spark中的spark-core_2.11包到classpath中-->
            <!-- 如果打成jar包,也就是说把spark-core_2.11打包进去了,发送到服务器执行的时候,因为服务器中-->
            <!-- 已经有spark-core_2.11这个依赖包了,可能会和我们打进去的同名包冲突.-->
            <!-- 为避免这种情况,可以设置scope=provided,那么在服务器执行的时候,不会用我们打包进去的依赖,-->
            <!-- 而会用服务器中依赖-->
            <!-- <scope>provided</scope>-->
        </dependency>
    </dependencies>

    <!-- 配置构建信息 -->
    <build>
        <!-- 声明并引入构建的插件 -->
        <plugins>
            <!-- 设置项目的编译版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- 用于编译Scala代码到class -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>